# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang:1.11.1
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html

default: &default
  after-steps:
    # https://github.com/wercker/step-slack
    - slack-notifier:
        url: $SLACK_WEBHOOK_URL
        channel: $SLACK_CHANNEL
        username: wercker_build

build:
  steps:

build-test:
  <<: *default

  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    # https://github.com/kyokomi/wercker-step-dep
    - kyokomi/dep

    # Test the project and tally the coverage
    # https://github.com/tcnksm/wercker-step-goveralls
    - tcnksm/goveralls:
      token: $COVERALLS_TOKEN

build-lint:
  <<: *default

  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    - script:
        name: go vet
        code: |
          go vet

    - script:
        name: golint
        code: |
          go get -u github.com/golang/lint/golint
          golint -set_exit_status
